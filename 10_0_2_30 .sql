-- phpMyAdmin SQL Dump
-- version 4.9.0.1
-- https://www.phpmyadmin.net/
--
-- Хост: 10.0.2.30
-- Время создания: Авг 17 2020 г., 13:52
-- Версия сервера: 5.7.29-32
-- Версия PHP: 7.1.33

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `f0424029_bk`
--
 CREATE DATABASE IF NOT EXISTS `f0598833_01` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
USE `f0598833_01`;

-- --------------------------------------------------------

--
-- Структура таблицы `id_tags`
--

CREATE TABLE `id_tags` (
  `id` int(11) NOT NULL,
  `id_tags` int(11) NOT NULL,
  `name` varchar(25) COLLATE utf8_unicode_ci NOT NULL,
  `text` text CHARACTER SET utf8 NOT NULL,
  `date_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `id_tags`
--

INSERT INTO `id_tags` (`id`, `id_tags`, `name`, `text`, `date_create`) VALUES
(1, 1, 'Что такое PHP', 'PHP - \"Инструменты для создания персональных веб-страниц\" скриптовый язык общего назначения, интенсивно применяемый для разработки веб-приложений. В настоящее время поддерживается подавляющим большинством хостинг-провайдеров и является одним из лидеров среди языков, применяющихся для создания динамических веб-сайтов.', '2020-04-05 17:20:51'),
(2, 1, 'Зачем нужен PHP', 'При переходе по конкретной ссылке браузер получает сайт а именно: картинки html, css и js файлы. Всё то из чего состоит сайт. Важно понимать, что php-скрипты сервер не отправляет потому, что браузер их всё равно не понимает. Веб-сервер с помощью php обрабатывает страницу и отправляет ее в ответ на запрос от компьютера.\r\n', '2020-04-05 17:21:51'),
(3, 1, 'Особенности PHP', 'PHP-код выполняется только в исполнительных файлах с расширением (*.php). От С или Паскаля php отличается банально синтаксисом.\r\n', '2020-04-05 17:22:26'),
(4, 2, 'Основы', 'Объявление php в исполняемом файле пишется так:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n &#60;?php   \r\n Echo \'Hello, world!\';\r\n ?&#62;\r\n</code>\r\n</pre>\r\n</p><p class=\"caption ot\">\r\nКоманда echo служит для того, чтобы что-то вывести на экран. Текст необходимо выделить в кавычки или в апострофы к этому вернемся в графе «1.1.». Очень важно в конце каждой строчки с командой писать « ; » (точку с запятой). Так же с помощью данной команды можно выводить текст с html разметкой. <br>\r\nПример: \r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php   \r\n Echo \'Hello, world!  &#60;br&#62;  Hello, world!!\';\r\n ?&#62;\r\n</code>\r\n</pre>\r\n</p><p class=\"caption ot\">\r\nТег  &#60;br&#62; устанавливает перевод строки в том месте, где этот тег находится. В получившейся странице мы увидим: <br>\r\nHello, world! <br>\r\nHello, world!! <br>\r\nPHP-код и html-разметку можно комбинировать не только командой echo но и просто закрытием кода php:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php \r\nEcho \'Hello, world!\';\r\n?&#62;\r\n  &#60;br&#62;;\r\n &#60;?\r\nEcho \'Hello, world!!\';\r\n?&#62;\r\n</code>\r\n</pre>&#62;', '2020-04-05 20:25:32'),
(5, 2, 'Переменные', 'Переменная создается таким образом:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php \r\n$a = 100;\r\n$_a = 99;\r\n?&#62;\r\n</code>\r\n</pre>\r\n</p><p class=\"caption ot\">\r\n	Имя переменной указывается после знака « $ » и первый символ переменной не может содержать цифру. То есть запись « $1a = 100; » будет ошибочной. Имя переменной может быть любым ($a_id, $i, $gr). </p><p class=\"caption ot\">\r\n	Переменную можно вывести на экран \r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php                                                                 \r\n$a = 100;\r\n$_a = 99;\r\nEcho $a; \r\nEcho \"&#60;hr&#62;\";\r\nEcho $_a;\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/1.png\">\r\n</p><p class=\"caption ot\">\r\n        Разница между кавычками и апострофами заключается в выводе переменных на экран:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php                                                                 \r\n$a = 100; \r\n$_a = 99; \r\nEcho \" test: $a \"; \r\nEcho \"&#60;hr&#62;\";\r\nEcho \' test: $_a; \';\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/2.png\">\r\n', '2020-04-05 20:28:50'),
(6, 2, 'Типы данных', 'Тип данных — класс данных, характеризуемый членами класса и операциями, которые могут быть к ним применены (ISO/IEC/IEEE 24765-2010).</p><p class=\"caption ot\">\r\n Тип данных — категоризация абстрактного множества возможных значений, характеристик и набор операций для некоторого атрибута (IEEE Std 1320.2-1998).<br><br>\r\nInteger ( int ) – тип данных «целое число».<br>\r\nFloat – тип данных «вещественное число» <или «дробное». <br>\r\nString (str) – тип данных «строка».<br>\r\nArray – тип данных «массив».<br>\r\nBoolean – тип данных «Булево значение».<br>\r\nВ php:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\n$a = 12;  // - int\r\n$b = 91.312; // - float\r\n$c = \"Rules\"; // - str \r\n$d = array(1,2,3,4,5,\'sd\'); // - array\r\n$f= $d[0] + $d[2];                              	           \r\nEcho $a . \"&#60;hr&#62;\";\r\nEcho $b . \"&#60;hr&#62;\";\r\nEcho $c . \"&#60;hr&#62;\";\r\nEcho $f . \"&#60;hr&#62;\";\r\nEcho $d[1], $d[5];\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/3.png\">\r\n</p><p class=\"caption ot\">\r\n	Точка «.» является оператором катенации (склеивает значения) и применяется только в «echo».\r\n</p><p class=\"caption ot\">\r\n	Для вывода конкретного элемента массива в квадратных скобках необходимо указать индекс (порядковый номер). В php нумерация начинается с нуля. Так же массив может содержать в себе разные типы данных. Массив может быть ассоциативным (индекс получает своё собственное имя). Важно понимать, что нумерации индексов это не коснётся:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\n$d = array(1, 2, 3, 4, 5, \'sd\',  \"arr\" => 3 , 7 ); \r\n?&#62;\r\n</code>\r\n</pre>\r\n</p><p class=\"caption ot\">\r\nВ данном массиве будут 7 индексов. Свой порядковый номер имеют только 6 из 7 (индекс с именем  «arr» не имеет номера),  но при выводе «echo $d[6];» мы получим 7, а чтобы вывести ячейку с именем arr нужно написать «echo $d[\'arr\'];».\r\n</p><p class=\"caption ot\">\r\nДалее массив может быть многомерным:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\n$d = array(1, 2, 3, 4, 5, array(1,2, \'sd\')); \r\n?&#62; \r\n</code>\r\n</pre>\r\n</p><p class=\"caption ot\">\r\nИ теперь в ячейке с индексом 5 мы имеем ещё один массив. В котором в свою очередь ещё 3 ячейки и чтобы получить одну из них нужно обратиться к ней таким образом:«echo $d[5][2]» получим значение «sd».\r\n</p><p class=\"caption ot\">\r\nСледующий тип данных Boolean. Переменная такого типа может иметь только одно из двух значений, а именно «true» - истина или «false» -ложь. \r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php \r\n$_b = true; echo $_b;                                      \r\necho \'&#60;hr&#62;\';\r\n$_bb = false; echo $_bb;\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/4.png\">\r\n</p><p class=\"caption ot\">\r\nЗначение true при выводе представляет собой 1 а false не выводится потому, что представляется в виде 0. То есть «true = 1», а «false = 0». Далее при рассмотрении оператора условий if это будет видно наглядно.\r\n\r\n', '2020-04-05 22:09:53'),
(7, 2, 'Математические операции', 'Регистр для операторов. не имеет значения но регистр для переменных важен. То есть $a и $A это разные переменные. Будем рассматривать 5 операторов: «+» сложение, «-» вычитание, «*» умножение, «/» деление и «%» деление по модулю. Допускается использование скобок () для изменения приоритета вычислений, как в присвоении значения к переменной так и в Echo.  \r\n</p><p class=\"caption ot\">\r\nКак использовать оператор сложения:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\nEcho 11 + 5;\r\necho \'&#60;hr&#62;\';                                                \r\n$a=7; \r\n$b=10;\r\nEcho $a + $b; \r\necho \'&#60;hr&#62;\';\r\n$c = $a + $b + 9;\r\necho $c;\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/5.png\">\r\n</p><p class=\"caption ot\">\r\nОператор вычитания:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\nEcho 11 - 5;\r\necho \'&#60;hr&#62;\';                                                \r\n$a=7; \r\n$b=10;\r\nEcho $a - $b; \r\necho \'&#60;hr&#62;\';\r\n$c = $a - $b - 9;\r\necho $c;\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/6.png\">\r\n</p><p class=\"caption ot\">\r\nОператор умножения:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\nEcho 11 * 5;\r\necho \'&#60;hr&#62;\';                                                \r\n$a=7; \r\n$b=10;\r\nEcho $a * $b; \r\necho \'&#60;hr&#62;\';\r\n$c = $a * $b * 9;\r\necho $c;\r\n?&#60;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/7.png\">\r\n</p><p class=\"caption ot\">\r\nОператор деления:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60?php\r\nEcho 11 / 5;\r\necho \'&#60;hr&#62;\';                                                \r\n$a=7; \r\n$b=10;\r\nEcho $a / $b; \r\necho \'&#60;hr&#62;\';\r\n$c = $a / $b / 9;\r\necho $c;\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/8.png\">\r\n</p><p class=\"caption ot\">\r\nОператор деления по модулю (ответ - остаток от деления):\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\nEcho 11 % 5;\r\necho \'&#60;hr&#62;\';                                                \r\n$a=70; \r\n$b=10;\r\nEcho $a % $b ;\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/9.png\">\r\n\r\n\r\n\r\n', '2020-04-06 12:54:47'),
(8, 2, 'Оператор условий', 'Оператор условий If служит для сравнения значений и переменных. <br>\r\nВ php:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\n$a=\'word\';\r\n$b=1;\r\nIf (($a==\'word\') and ($b==1)) \r\n{ \r\nEcho \'условие истинно\' ;\r\n}\r\n?&#62;\r\n</code>\r\n</pre></p><p>\r\n	Как работает оператор if? Если условие (в красных скобках) истинно то выполняется код в фигурных скобках. Как определяется истинность?  Сначала условие в зеленых скобках ($a==\'word\'). Если оно истинно то условно значение в скобках принимает значение true (истинно или 1). Далее условие в желтых скобках ($b==1). После идет условие в красных скобках с полученными значениями. Можно понять это так if(( 1) and (1)) или так «если((истинно) и (истинно))  ». <br>\r\nДля сравнения используются знаки: \r\n<br>\r\n« == » – равно  <br>\r\n« != » – не равно  <br>\r\n« <= » – меньше или равно<br>\r\n« >= » – больше или равно <br>\r\n« > »   – больше<br>\r\n« < »   – меньше <br>\r\nДля объединения нескольких условий используется:<br>\r\nAnd – и <br>\r\nOr – или <br>\r\n</p><p>\r\nif($a==$b) – если а равно б условие выполнится <br>\r\nif((($a==$b) and ($c>$r)) or ($f>=$p)) – если а равно б и с равно r или если f больше равно p </p><p>\r\nВ данном условии код выполнится при одном из вариантов:<br>\r\n1) Если а равно б и с равно r.\r\nИли <br>\r\n2) Если f больше равно p.\r\n', '2020-04-06 13:22:16'),
(9, 2, 'Циклы', 'Операторы циклов предназначен для организации многократного исполнения конструкций. Операторы циклов for, while и foreach. </p><p class=\"caption ot\">\r\nОператор циклов for:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php                                                    \r\nfor ($i = 1; $i <= 10; $i++)\r\n{\r\n echo $i . \'&#60;br&#62;\' ; \r\n}\r\n?&#62;	\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/10.png\">\r\n</p><p class=\"caption ot\">\r\nОператор циклов while:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php                                                    \r\n$i = -2; \r\nwhile ($i <= 7) \r\n{\r\necho $i . \'&#60;br&#62;\' ;\r\n$i++;\r\n}\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/11.png\">\r\n</p><p class=\"caption ot\">\r\nОператор циклов foreach (перебирает значения массива):\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php                                          \r\n$m=array(5,4,9, \'ss\',3, \'p\');\r\nforeach($m as $v) \r\n{\r\necho $v . \'&#60;hr&#62;\';\r\n}\r\n?&#62;\r\n</code>\r\n</pre>\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/12.png\">\r\n\r\n', '2020-04-06 13:45:56'),
(10, 2, 'Формы', 'При создании сайта в некоторых ситуациях приходится использовать ввод данных. Для этого используют формы, в которых выставляют нужные компоненты. Форма использует один из двух методом GET и POST. <br>\r\nМетод GET используется для обработки небольшой по объему и незначительной по содержанию информации, а адресная строка принимает обрабатываемые значения (ya.ru/?&id_tags=2&#9). Эту особенность можно использовать в php при создании страниц используя оператор условия и привязку к «якорю»<br>\r\nМетод POST вмещает сравнительно больше по отношению к GET и служит для обработки более важной информации: пароли, банковские карты (данные, которые подразумевают шифрование) \r\n', '2020-04-06 20:58:55'),
(11, 3, 'Создание БД', 'Для создания динамических веб страниц нужно много соответствующей информации, а её необходимо хранить. Хранилищем в данном случаи выступает База Данных. Перед работай с БД требуется ознакомится с СУБД phpMyAdmin. СУБД используют язык sql для создания, чтения, обновления и удаления в БД. База данных представляет собой таблицу с нужной нам информацией. Чтобы работать с БД ее нужно подключить к сайту. Для изучения СУБД phpMyAdmin рекомендуется использовать OpenServer (программа для открытия локального сайта с БД). Рассмотрим создание примитивной БД, подключение к сайту, удобные способы взаимодействия сайта с БД и различные sql-запросы для понимания принципов работы.\r\nСоздание БД:\r\n<br>\r\n\r\n1)<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/13.png\">                                   2)\r\n<img class=\"materialboxed z-depth-2\" width=\"100%\" src=\"fpng/14.png\">\r\n\r\n</p><p>\r\nПри создании указывается имя БД (123) для того чтобы далее ссылаться к нужной базе и кодировка («utf8_general_ci» самая оптимальная).</p><p>\r\nПосле создания БД следует создать таблицы (в них и хранится информация). Таблицы имеют имена (удобное имя присваивается при создании). Имя используется при работе с конкретной таблицей.</p><p>\r\nПри создании полей в таблице каждому полю нужно присвоить удобное имя. Одно из полей должно быть «ключевым». Это нужно для того, чтобы каждая запись имела уникальный идентификатор. Следует понимать, для чего будет использоваться то или иное поле и присвоить нужный тип данных(поле будет хранить только значения характерные выбранному типу). Можно выставить значение по умолчанию. Ключевому полю необходимо присвоить свойство A_I (AUTO_INCREMENT). Нужно это для того, чтобы не заполнять ключевое поле каждый раз «в ручную». Свойство уникальности можно присвоить любому полю (к примеру «login» для уникальности каждого логина при регистрации и авторизации)\r\n', '2020-04-06 21:11:29'),
(12, 3, 'Подключение к БД', 'SQL (англ. structured query language — «язык структурированных запросов») —язык программирования, применяемый для создания, модификации и управления данными в реляционной базе данных, управляемой соответствующей системой управления базами данных. Проще говоря, SQL Язык для обращения к БД. Запросы делятся на 4 типа «CREATE», «READ», «UPDATE» и «DELETE» (создание, чтение, обновление и удаление). В основном эти запросы используются для работы с записями.</p><p>\r\nДля того, чтобы сайт подключить к базе нужно прописать следующий код в *.php:<br>\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\n$host=\'localhost\';\r\n$login=\'root\'; \r\n$password=\'\'; \r\n$db_name=\'123\';\r\n$connect=mysqli_connect($host, $login, $password, $db_name);\r\n?&#62;\r\n</code>\r\n</pre>\r\n</p><p>\r\nВ примере указаны стандартные значение для подключения БД и сайта на OpenServer. $host отвечает за адрес, где находится БД. Логин, пароль и имя базы данных соответственно.</p><p>\r\nДля корректной работы БД с сайтом в каждом файле должно быть подключение к ней. Чтобы упростить себе жизнь, можно создать отдельный файл connect.php в который записать код для подключения к БД и уже этот файл подключать к любому другому файлу командой. В PHP имеется 4 функции для подключения других файлов. Это include, include_once, require и require_once. </p><p>\r\nДля начала разберём разницу между include и require. Эти две функции различаются только реакцией на отсутствие подключаемого файла. Функция include («включить») при отсутствии указанного файла выдаст сообщение об ошибке типа E_WARNING, но выполнение программы продолжится. В отличие от неё, require («требовать») при отсутствии подключаемого файла выдаёт фатальную ошибку (E_ERROR), которая приводит к немедленной остановке выполняемого скрипта.</p><p>\r\nТеперь рассмотрим конструкции include_once и require_once. От простых include и require они отличаются окончанием «_once», которое предотвращает повторное подключение тех же самых файлов.</p><p>\r\nТеперь в начале файла достаточно прописать:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php \r\nrequire_once \'connect.php\';\r\n?&#62;\r\n</code>\r\n</pre>\r\n', '2020-04-06 21:42:19'),
(13, 3, 'Работа с БД (create)', 'Создание записей в таблице через sql запрос:<br>\r\nINSERT INTO `table1` (`id`, `name`,`count`, `price`) VALUES (NULL, \'name \', \'1\', \'1\');</p><p>\r\nЗапрос можно выразить так:<br>\r\nВСТАВИТЬ В `имя_таблицы` (`поле_id`,`поле_name`,`поле_count`,`поле_price`) ЗНАЧЕНИЯ </p><p>\r\nЗначения записываются по порядку записанных полей. Ключевое поле идентификатора заполнять не нужно. При пустых значениях поля в базе будут заполнены значениями по умолчанию (при отсутствии значения по умолчанию 0 или «пробел» в зависимости от типа данных).\r\n', '2020-04-06 21:50:24'),
(14, 3, 'Работа с БД (delete)', 'Удаление записей в таблице через sql запрос:<br>\r\nDELETE FROM `table1` WHERE ` table1`.`id` = 1;</p><p>\r\nЗапрос можно выразить так:<br>\r\nУДАЛИТЬ ИЗ `имя_таблицы` ГДЕ `имя_таблицы`.`поле_id`=1;</p><p>\r\nТакой запрос удалит все записи, в которых поле id будет иметь значение 1 но, так как поле id уникально для каждой записи, будет удалена только одна запись имеющая значение 1 в поле id. Это значит, что подобным запросом можно удалять множество записей подходящий под условие.\r\n', '2020-04-06 21:51:29'),
(15, 3, 'Работа с БД (read)', 'Чтение записей в таблице через sql запрос:<br>\r\nSELECT * FROM ` table1` WHERE (`id`>3) and (`id`<7);</p><p>\r\nЗапрос можно выразить так:<br>\r\nВЫБРАТЬ ВСЕ_ПОЛЯ(*) ИЗ ` имя_таблицы ` ГДЕ (`поле_id`>3) И (`поле_id`<7);</p><p>\r\nТакой запрос выберет все записи из таблицы поле id которых строго больше 3 и строго меньше 7. Можно вывести все записи убрав условие WHERE «SELECT * FROM ` table1`». Так же можно выводить только некоторые поля записи «SELECT `id`,`name` FROM ` table1`».\r\n', '2020-04-06 21:52:04'),
(16, 3, 'Работа с БД (update)', 'Обновление записей в таблице через sql запрос:<br>\r\nUPDATE `table1` SET `name` = \'Cactus\', `count` = \'7\' WHERE `table1`.`id` = 4;\r\n</p><p>\r\nЗапрос можно выразить так:<br>\r\nОБНОВИТЬ ` имя_таблицы` ПРИСВОИТЬ `name` = \'Cactus\', `count` = \'7\' ГДЕ ` имя_таблицы`.`поле_id`=4;</p><p>\r\nТакой запрос обновит запись с нужным идентификатором и присвоит значения полю «имя» и «количество». Так же запрос может обновлять множество записей, если они подходят по условию. \r\n', '2020-04-06 21:53:07'),
(17, 3, 'PHP +SQL', 'Взаимодействие php с sql:\r\n<pre class=\" language-markup\"><code class=\" language-markup\">\r\n&#60;?php\r\nrequire_once \'connect.php\';\r\n $query=mysqli_query($connect, \"SELECT * FROM `table1`\");\r\nwhile( ($res = mysqli_fetch_assoc($query)) )\r\n{ \r\necho \'Уникальный номер:\'.$res[\'id\'].\' Имя:\'.$res[\'name\'];\r\n} \r\n?&#62;\r\n</code>\r\n</pre>\r\n</p><p>\r\nПеременная $query принимает значение запроса. Команда mysqli_fetch_assoc присваивает переменной $res значение одной записи в виде массива а цикл перебирает все значения. Для других типов запроса выполняется конструкция «mysqli_query(ЗАПРОС);»\r\n', '2020-04-06 21:54:48'),
(19, 4, 'Новый раздел', '<pre class=\" language-markup\"><code class=\" language-markup\">&#60;php\r\nEcho \"Ferdinand\";\r\nphp&#62;</code></pre>', '2020-06-29 23:51:34');

-- --------------------------------------------------------

--
-- Структура таблицы `logs`
--

CREATE TABLE `logs` (
  `id` int(11) NOT NULL,
  `log` text COLLATE utf8_unicode_ci NOT NULL,
  `lvl` int(1) NOT NULL DEFAULT '0',
  `login` varchar(15) COLLATE utf8_unicode_ci NOT NULL,
  `time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `logs`
--

INSERT INTO `logs` (`id`, `log`, `lvl`, `login`, `time`) VALUES
(1, 'profile created', 0, '66666666666', '2020-05-13 15:21:14'),
(2, 'user online', 0, '66666666666', '2020-05-13 15:24:54'),
(3, 'user online', 0, '66666666666', '2020-05-13 15:26:58'),
(4, 'user online', 0, '66666666666', '2020-05-13 15:29:00'),
(5, 'user offline', 0, '66666666666', '2020-05-13 15:29:01'),
(6, 'user online', 0, '66666666666', '2020-05-13 15:29:28'),
(7, 'user offline', 0, '66666666666', '2020-05-13 15:29:29'),
(8, 'user online', 0, 'admin', '2020-05-13 15:40:05'),
(9, 'profile created', 0, 'Justy', '2020-05-13 23:50:40'),
(10, 'user online', 0, 'Justy', '2020-05-13 23:51:25'),
(11, 'user online', 0, 'Justy', '2020-05-13 23:52:12'),
(12, 'user online', 0, 'Justy', '2020-05-13 23:52:16'),
(13, 'user offline', 0, 'Justy', '2020-05-13 23:52:25'),
(14, 'profile created', 0, 'Please', '2020-05-13 23:53:13'),
(15, 'profile created', 0, 'kulikovvlad', '2020-05-16 21:31:26'),
(16, 'profile created', 0, 'kulikovvlad', '2020-05-16 21:31:33'),
(17, 'user offline', 0, 'kulikovvlad', '2020-05-16 21:37:02'),
(18, 'user online', 0, 'kulikovvlad', '2020-05-16 21:39:58'),
(19, 'user offline', 0, 'kulikovvlad', '2020-05-16 21:52:01'),
(20, 'user online', 0, 'admin', '2020-05-16 21:52:10'),
(21, 'user online', 0, 'admin', '2020-05-25 13:08:34'),
(22, 'user offline', 0, 'admin', '2020-05-25 13:12:02'),
(23, 'profile created', 0, '8888888', '2020-05-25 13:12:17'),
(24, 'profile created', 0, '44444445', '2020-05-25 13:29:36'),
(25, 'user offline', 0, '44444445', '2020-05-25 13:32:54'),
(26, 'user online', 0, '44444445', '2020-05-25 13:47:57'),
(27, 'user offline', 0, '44444445', '2020-05-25 13:47:59'),
(28, 'user online', 0, '44444445', '2020-05-25 13:48:03'),
(29, 'user offline', 0, '44444445', '2020-05-25 13:48:18'),
(30, 'user online', 0, 'admin', '2020-05-25 14:02:42'),
(31, 'user online', 0, 'admin', '2020-05-26 11:35:02'),
(32, 'user offline', 0, 'admin', '2020-05-26 11:35:05'),
(33, 'user online', 0, 'admin', '2020-05-26 11:37:03'),
(34, 'user offline', 0, 'admin', '2020-05-26 12:30:26'),
(35, 'user online', 0, 'admin', '2020-05-26 12:30:42'),
(36, 'user offline', 0, 'admin', '2020-05-26 12:49:30'),
(37, 'user online', 0, 'admin', '2020-05-26 13:42:46'),
(38, 'user offline', 0, 'admin', '2020-05-26 14:18:41'),
(39, 'user online', 0, '44444445', '2020-05-26 14:18:45'),
(40, 'user offline', 0, '44444445', '2020-05-26 16:50:12'),
(41, 'user online', 0, 'admin', '2020-05-26 16:50:18'),
(42, 'user online', 0, '44444445', '2020-05-26 16:50:52'),
(43, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 16:53:05'),
(44, 'Пользователь вышел', 0, 'admin', '2020-05-26 16:55:18'),
(45, 'Пользователь онлайн', 0, 'admin', '2020-05-26 16:55:28'),
(46, 'Пользователь вышел', 0, 'admin', '2020-05-26 18:39:50'),
(47, 'Пользователь онлайн', 0, 'admin', '2020-05-26 18:39:54'),
(48, 'Пользователь вышел', 0, 'admin', '2020-05-26 18:39:57'),
(49, 'Пользователь онлайн', 0, 'admin', '2020-05-26 18:40:03'),
(50, 'Пользователь вышел', 0, 'admin', '2020-05-26 18:40:11'),
(51, 'Пользователь онлайн', 0, '44444445', '2020-05-26 18:40:15'),
(52, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 18:40:19'),
(53, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 18:40:21'),
(54, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 18:43:31'),
(55, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 18:43:32'),
(56, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 18:44:14'),
(57, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 18:44:16'),
(58, 'Пользователь вышел', 0, '44444445', '2020-05-26 19:14:15'),
(59, 'Пользователь онлайн', 0, 'admin', '2020-05-26 19:14:21'),
(60, 'Пользователь онлайн', 0, 'admin', '2020-05-26 22:03:00'),
(61, 'Пользователь вышел', 0, 'admin', '2020-05-26 22:07:05'),
(62, 'Профиль создан', 0, '66666666666', '2020-05-26 22:08:43'),
(63, 'Профиль создан', 0, '66666666666', '2020-05-26 22:09:00'),
(64, 'Профиль создан', 0, '666666666', '2020-05-26 22:09:18'),
(65, 'Профиль создан', 0, '66666333333', '2020-05-26 22:09:38'),
(66, 'Пользователь вышел', 0, '66666333333', '2020-05-26 22:10:27'),
(67, 'Пользователь онлайн', 0, 'admin', '2020-05-26 22:10:33'),
(68, 'Пользователь вышел', 0, 'admin', '2020-05-26 22:12:58'),
(69, 'Пользователь онлайн', 0, '44444445', '2020-05-26 22:13:14'),
(70, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 22:13:18'),
(71, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 22:15:09'),
(72, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 22:17:16'),
(73, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 22:18:00'),
(74, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 22:18:01'),
(75, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 22:18:58'),
(76, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 22:19:35'),
(77, 'Пользователь сдает тест', 0, '44444445', '2020-05-26 22:19:38'),
(78, 'Пользователь вышел', 0, '44444445', '2020-05-26 22:21:33'),
(79, 'Пользователь онлайн', 0, 'admin', '2020-05-26 22:21:37'),
(80, 'Пользователь онлайн', 0, 'admin', '2020-05-27 10:34:01'),
(81, 'Пользователь вышел', 0, 'admin', '2020-05-27 11:12:43'),
(82, 'Пользователь онлайн', 0, 'admin', '2020-05-27 11:13:31'),
(83, 'Пользователь вышел', 0, 'admin', '2020-05-27 12:03:25'),
(84, 'Пользователь онлайн', 0, 'admin', '2020-05-27 12:03:30'),
(85, 'Пользователь вышел', 0, 'admin', '2020-05-27 12:03:46'),
(86, 'Пользователь онлайн', 0, '11111', '2020-05-27 12:03:49'),
(87, 'Пользователь сдает тест', 0, '11111', '2020-05-27 12:03:51'),
(88, 'Пользователь вышел', 0, '11111', '2020-05-27 12:07:50'),
(89, 'Пользователь онлайн', 0, '66666333333', '2020-05-27 12:08:24'),
(90, 'Пользователь вышел', 0, '66666333333', '2020-05-27 12:08:43'),
(91, 'Пользователь онлайн', 0, '66666333333', '2020-05-27 12:08:50'),
(92, 'Пользователь сдает тест', 0, '66666333333', '2020-05-27 12:08:52'),
(93, 'Пользователь вышел', 0, '66666333333', '2020-05-27 12:11:10'),
(94, 'Пользователь онлайн', 0, 'admin', '2020-05-27 12:11:15'),
(95, 'Пользователь вышел', 0, 'admin', '2020-05-27 12:11:25'),
(96, 'Пользователь онлайн', 0, '66666333333', '2020-05-27 12:11:35'),
(97, 'Пользователь сдает тест', 0, '66666333333', '2020-05-27 12:11:37'),
(98, 'Пользователь сдает тест', 0, '66666333333', '2020-05-27 12:12:30'),
(99, 'Пользователь сдает тест', 0, '66666333333', '2020-05-27 12:14:29'),
(100, 'Пользователь сдает тест', 0, '66666333333', '2020-05-27 12:14:38'),
(101, 'Пользователь сдает тест', 0, '66666333333', '2020-05-27 12:14:44'),
(102, 'Пользователь сдает тест', 0, '66666333333', '2020-05-27 12:17:00'),
(103, 'Пользователь вышел', 0, '66666333333', '2020-05-27 12:22:04'),
(104, 'Пользователь онлайн', 0, 'admin', '2020-05-27 12:22:09'),
(105, 'Профиль создан', 0, 'Login', '2020-05-28 12:31:35'),
(106, 'Пользователь вышел', 0, 'Login', '2020-05-28 12:31:37'),
(107, 'Пользователь онлайн', 0, 'login', '2020-05-28 12:31:48'),
(108, 'Пользователь вышел', 0, 'login', '2020-05-28 12:31:58'),
(109, 'Пользователь онлайн', 0, 'login', '2020-05-28 12:39:51'),
(110, 'Пользователь вышел', 0, 'login', '2020-05-28 12:54:17'),
(111, 'Пользователь онлайн', 0, 'admin', '2020-05-28 12:54:28'),
(112, 'Пользователь вышел', 0, 'admin', '2020-05-28 13:30:39'),
(113, 'Пользователь онлайн', 0, 'admin', '2020-05-28 13:30:46'),
(114, 'Пользователь вышел', 0, 'admin', '2020-05-28 13:32:03'),
(115, 'Пользователь онлайн', 0, 'login', '2020-05-28 13:32:09'),
(116, 'Пользователь сдает тест', 0, 'login', '2020-05-28 13:32:11'),
(117, 'Пользователь вышел', 0, 'login', '2020-05-28 13:43:05'),
(118, 'Пользователь онлайн', 0, 'admin', '2020-05-28 13:43:12'),
(119, 'Пользователь вышел', 0, 'admin', '2020-05-28 14:33:35'),
(120, 'Пользователь онлайн', 0, 'admin', '2020-05-28 14:33:49'),
(121, 'Пользователь вышел', 0, 'admin', '2020-05-28 14:33:53'),
(122, 'Пользователь онлайн', 0, 'admin', '2020-05-28 14:34:11'),
(123, 'Пользователь вышел', 0, 'admin', '2020-05-28 15:21:31'),
(124, 'Пользователь онлайн', 0, 'admin', '2020-05-28 16:00:57'),
(125, 'Пользователь вышел', 0, 'admin', '2020-05-28 16:07:57'),
(126, 'Пользователь онлайн', 0, 'admin', '2020-05-28 16:16:48'),
(127, 'Пользователь вышел', 0, 'admin', '2020-05-28 16:31:58'),
(128, 'Пользователь онлайн', 0, '44444445', '2020-05-28 16:32:03'),
(129, 'Пользователь сдает тест', 0, '44444445', '2020-05-28 16:32:05'),
(130, 'Профиль создан', 0, 'admin', '2020-05-29 18:31:41'),
(131, 'Профиль создан', 0, 'admin', '2020-05-29 18:32:37'),
(132, 'Пользователь онлайн', 0, 'admin', '2020-05-29 18:40:57'),
(133, 'Пользователь онлайн', 0, 'admin', '2020-06-17 17:10:29'),
(134, 'Пользователь вышел', 0, 'admin', '2020-06-17 17:13:57'),
(135, 'Пользователь онлайн', 0, 'admIn', '2020-06-17 17:14:09'),
(136, 'Пользователь вышел', 0, 'admIn', '2020-06-17 17:14:12'),
(137, 'Пользователь онлайн', 0, 'ADMIN', '2020-06-17 17:14:22'),
(138, 'Пользователь вышел', 0, 'ADMIN', '2020-06-17 19:31:00'),
(139, 'Пользователь онлайн', 0, 'Admin', '2020-06-17 19:58:25'),
(140, 'Пользователь онлайн', 0, 'admin', '2020-06-18 10:18:15'),
(141, 'Пользователь вышел', 0, 'admin', '2020-06-18 10:18:25'),
(142, 'Пользователь онлайн', 0, 'admin', '2020-06-18 10:24:01'),
(143, 'Пользователь вышел', 0, 'admin', '2020-06-18 10:31:26'),
(144, 'Профиль создан', 0, 'obrazec', '2020-06-18 10:37:52'),
(145, 'Пользователь вышел', 0, 'obrazec', '2020-06-18 10:37:59'),
(146, 'Пользователь онлайн', 0, 'admin', '2020-06-18 10:38:03'),
(147, 'Пользователь вышел', 0, 'admin', '2020-06-18 10:38:26'),
(148, 'Пользователь онлайн', 0, 'admin', '2020-06-18 10:38:34'),
(149, 'Пользователь онлайн', 0, 'obrazec', '2020-06-18 10:55:41'),
(150, 'Пользователь сдает тест', 0, 'obrazec', '2020-06-18 10:55:43'),
(151, 'Пользователь сдает тест', 0, 'obrazec', '2020-06-18 11:05:11'),
(152, 'Пользователь сдает тест', 0, 'obrazec', '2020-06-18 11:15:28'),
(153, 'Пользователь вышел', 0, 'admin', '2020-06-18 11:25:26'),
(154, 'Пользователь вышел', 0, 'obrazec', '2020-06-18 12:02:11'),
(155, 'Пользователь онлайн', 0, 'admin', '2020-06-18 12:02:16'),
(156, 'Пользователь вышел', 0, 'admin', '2020-06-18 12:03:26'),
(157, 'Пользователь онлайн', 0, 'obrazec', '2020-06-18 12:03:36'),
(158, 'Пользователь вышел', 0, 'obrazec', '2020-06-18 12:13:22'),
(159, 'Пользователь онлайн', 0, 'admin', '2020-06-18 12:13:49'),
(160, 'Пользователь онлайн', 0, 'obrazec', '2020-06-18 12:17:36'),
(161, 'Пользователь сдает тест', 0, 'obrazec', '2020-06-18 12:17:39'),
(162, 'Пользователь вышел', 0, 'obrazec', '2020-06-18 12:26:07'),
(163, 'Профиль создан', 0, 'obrazec1', '2020-06-18 12:26:26'),
(164, 'Пользователь вышел', 0, 'obrazec1', '2020-06-18 12:26:47'),
(165, 'Пользователь онлайн', 0, 'obrazec1', '2020-06-18 12:26:51'),
(166, 'Пользователь сдает тест', 0, 'obrazec1', '2020-06-18 12:26:52'),
(167, 'Пользователь вышел', 0, 'obrazec1', '2020-06-18 12:39:58'),
(168, 'Пользователь онлайн', 0, 'admin', '2020-06-18 19:19:52'),
(169, 'Пользователь вышел', 0, 'admin', '2020-06-18 21:12:23'),
(170, 'Профиль создан', 0, 'rrrrrrrrrrrrrrr', '2020-06-18 21:16:20'),
(171, 'Пользователь онлайн', 0, 'admin', '2020-06-19 08:55:26'),
(172, 'Профиль создан', 0, 'dsdsdsdadsaddsa', '2020-06-19 14:48:04'),
(173, 'Пользователь вышел', 0, 'dsdsdsdadsaddsa', '2020-06-19 14:53:49'),
(174, 'Пользователь онлайн', 0, 'Admin', '2020-06-29 23:46:17'),
(175, 'Пользователь онлайн', 0, 'admin', '2020-07-16 19:21:57'),
(176, 'Пользователь вышел', 0, 'admin', '2020-07-16 19:22:24'),
(177, 'Пользователь онлайн', 0, 'admin', '2020-07-18 00:38:38');

-- --------------------------------------------------------

--
-- Структура таблицы `result`
--

CREATE TABLE `result` (
  `id` int(11) NOT NULL,
  `login` text COLLATE utf8_unicode_ci NOT NULL,
  `result` text COLLATE utf8_unicode_ci NOT NULL,
  `res` int(11) NOT NULL,
  `average` int(11) NOT NULL,
  `date_time` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `result`
--

INSERT INTO `result` (`id`, `login`, `result`, `res`, `average`, `date_time`) VALUES
(30, 'obrazec', '[1]=1;[2]=1;[3]=2;[4]=1;[5]=1;[6]=2;[7]=1;[8]=1;[9]=4;[10]=1;[11]=1;', 4, 73, '2020-06-18 12:25:41'),
(31, 'obrazec1', '[1]=1;[2]=1;[3]=1;[4]=1;[5]=1;[6]=1;[7]=1;[8]=1;[9]=1;[10]=1;[11]=1;', 5, 100, '2020-06-18 12:27:08');

-- --------------------------------------------------------

--
-- Структура таблицы `result_log`
--

CREATE TABLE `result_log` (
  `id` int(11) NOT NULL,
  `login` text COLLATE utf8_unicode_ci NOT NULL,
  `result` text COLLATE utf8_unicode_ci NOT NULL,
  `res` int(11) NOT NULL,
  `average` int(11) NOT NULL,
  `date_time` datetime DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `result_log`
--

INSERT INTO `result_log` (`id`, `login`, `result`, `res`, `average`, `date_time`) VALUES
(1, '44444445', '[1]=4;[2]=1;[3]=1;[4]=2;[5]=1;[6]=1;[7]=1;[8]=3;[9]=3;[10]=2;', 4, 50, '2020-05-26 19:53:53'),
(4, 'obrazec', '[1]=1;[2]=1;[3]=1;[4]=2;[5]=4;[6]=3;[7]=1;[8]=1;[9]=1;[10]=1;[11]=;', 4, 73, '2020-06-18 11:05:05'),
(5, 'obrazec', '[1]=1;[2]=1;[3]=1;[4]=1;[5]=1;[6]=1;[7]=1;[8]=1;[9]=1;[10]=1;[11]=1;', 5, 100, '2020-06-18 11:13:44'),
(6, '66666333333', '[1]=1;[2]=1;[3]=1;[4]=1;[5]=1;[6]=1;[7]=1;[8]=1;[9]=1;[10]=1;[11]=;', 5, 100, '2020-06-18 11:13:47');

-- --------------------------------------------------------

--
-- Структура таблицы `tags`
--

CREATE TABLE `tags` (
  `id` int(11) NOT NULL,
  `name` varchar(25) COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `tags`
--

INSERT INTO `tags` (`id`, `name`) VALUES
(1, 'КРАТКО О PHP '),
(2, 'PHP '),
(3, 'PHP + SQL');

-- --------------------------------------------------------

--
-- Структура таблицы `test`
--

CREATE TABLE `test` (
  `id` int(11) NOT NULL,
  `1` text COLLATE utf8_unicode_ci NOT NULL,
  `2` text COLLATE utf8_unicode_ci NOT NULL,
  `3` text COLLATE utf8_unicode_ci NOT NULL,
  `4` text COLLATE utf8_unicode_ci NOT NULL,
  `quest` text COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `test`
--

INSERT INTO `test` (`id`, `1`, `2`, `3`, `4`, `quest`) VALUES
(1, 'a', 'b', 'c', 'd', 'quest1'),
(2, 'a', 'b', 'c', 'd', 'quest2'),
(3, 'a', 'b', 'c', 'd', 'quest3'),
(4, 'a', 'b', 'c', 'd', 'quest4'),
(5, 'a', 'b', 'c', 'd', 'quest5'),
(6, 'a', 'b', 'c', 'd', 'quest6'),
(7, 'a', 'b', 'c', 'd', 'quest7'),
(8, 'a', 'b', 'c', 'd', 'quest8'),
(9, 'a', 'b', 'c', 'd', 'quest9'),
(10, 'a', 'b', 'c', 'd', 'quest10'),
(13, 'a', 'b', 'c', 'd', 'quest');

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `login` varchar(15) COLLATE utf8_unicode_ci NOT NULL,
  `fname` text COLLATE utf8_unicode_ci NOT NULL,
  `lname` text COLLATE utf8_unicode_ci NOT NULL,
  `password` text COLLATE utf8_unicode_ci NOT NULL,
  `np` varchar(25) COLLATE utf8_unicode_ci NOT NULL,
  `lvl` int(1) NOT NULL DEFAULT '0',
  `color` int(1) NOT NULL DEFAULT '0',
  `create_date` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `ip_when_create` varchar(20) COLLATE utf8_unicode_ci NOT NULL,
  `groups` varchar(10) COLLATE utf8_unicode_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `login`, `fname`, `lname`, `password`, `np`, `lvl`, `color`, `create_date`, `ip_when_create`, `groups`) VALUES
(27, 'krowler', '133344', '33344', '63ee451939ed580ef3c4b6f0109d1fd0', '89618083451', 1, 0, '2020-05-11 15:05:57', '', ''),
(31, '11111', '11111', '11111', '3cdf5666859f6906c283a1058cd5b9a7', '11111111111', 1, 0, '2020-05-11 16:31:35', '46.61.38.245', ''),
(32, 'admin', 'admin', 'admin', 'c3284d0f94606de1fd2af172aba15bf3', '88888888877', 5, 0, '2020-05-11 17:13:00', '46.61.38.245', ''),
(33, '66666666666', '66666666', '66666666', '63ee451939ed580ef3c4b6f0109d1fd0', '66666666666', 0, 0, '2020-05-13 15:21:14', '5.139.96.87', '420hh'),
(34, 'Justy', 'Trays', 'Gift', '5918080e8dd9bc3cd09bd23762fc52d9', '89505135621', 0, 0, '2020-05-13 23:50:40', '5.139.96.87', '170121'),
(35, 'Please', 'Risk', 'Roy', '63ee451939ed580ef3c4b6f0109d1fd0', '99922299999', 0, 0, '2020-05-13 23:53:13', '5.139.96.87', '121233'),
(36, 'kulikovvlad', 'Куликов', 'Влад', '894c925e9616baf4484f6fccbf9013c0', '89614083751', 0, 0, '2020-05-16 21:31:26', '87.117.55.33', '4-15ПКС'),
(37, '8888888', '8888888', '8888888', '8b2773c0f1074f1cd5bc6f64eb19a592', '88888888887', 0, 0, '2020-05-25 13:12:17', '31.23.112.218', '8888888'),
(38, '44444445', '44444445', '44444445', 'df861551c7a36c547cfd5dab82b0a0dc', '55554444444', 1, 0, '2020-05-25 13:29:36', '31.23.112.218', '44444445'),
(42, '66666333333', '66666333333', '66666333333', 'ebb42fd910eda0b729470bffdd822a97', '66666333333', 1, 0, '2020-05-26 22:09:38', '93.178.70.12', '66666333'),
(43, 'Login', 'Владислав', 'Куликов', '63ee451939ed580ef3c4b6f0109d1fd0', '79999999999', 1, 0, '2020-05-28 12:31:35', '5.139.86.126', '4-15'),
(44, 'obrazec', 'obrazec', 'obrazec', 'caaaf78460b8fc829cf0d0e25613e627', '73333333333', 1, 0, '2020-06-18 10:37:52', '93.178.80.147', 'obrazec'),
(45, 'obrazec1', 'obrazec1', 'obrazec1', 'f366401acaeb11eecace97f21d93e229', '74444444444', 1, 0, '2020-06-18 12:26:26', '93.178.80.147', 'obrazec1');

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `id_tags`
--
ALTER TABLE `id_tags`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `logs`
--
ALTER TABLE `logs`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `result`
--
ALTER TABLE `result`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `result_log`
--
ALTER TABLE `result_log`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `tags`
--
ALTER TABLE `tags`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `test`
--
ALTER TABLE `test`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `login` (`login`),
  ADD UNIQUE KEY `np` (`np`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `id_tags`
--
ALTER TABLE `id_tags`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=20;

--
-- AUTO_INCREMENT для таблицы `logs`
--
ALTER TABLE `logs`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=178;

--
-- AUTO_INCREMENT для таблицы `result`
--
ALTER TABLE `result`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=32;

--
-- AUTO_INCREMENT для таблицы `result_log`
--
ALTER TABLE `result_log`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT для таблицы `tags`
--
ALTER TABLE `tags`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT для таблицы `test`
--
ALTER TABLE `test`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=14;

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=46;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
